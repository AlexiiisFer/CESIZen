name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      build_image:
        description: 'Whether to build the Docker image during the run'
        required: false
        default: 'false'

env:
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  DEBUG: 'False'
  ALLOWED_HOSTS: 'localhost,127.0.0.1'
  DB_NAME: test_db
  DB_USER: test_user
  DB_PASSWORD: test_pass
  DB_HOST: 127.0.0.1
  DB_PORT: 5432
  BUILD_IMAGE: 'false'
  # Use workflow_dispatch input 'build_image' at runtime in the step 'if' expression

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U test_user"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for Postgres to be ready
        run: |
          for i in $(seq 1 30); do
            if pg_isready -h 127.0.0.1 -p 5432 -U test_user > /dev/null 2>&1; then
              echo 'Postgres is up'
              break
            fi
            echo 'Waiting for Postgres...'
            sleep 1
          done

      - name: Run migrations (retry loop)
        env:
          DJANGO_SETTINGS_MODULE: CesiZen.settings
        run: |
          for i in {1..10}; do
            python CesiZen/manage.py migrate && break || sleep 3
          done

      - name: Run Django tests
        env:
          DJANGO_SETTINGS_MODULE: CesiZen.settings
        run: python CesiZen/manage.py test --verbosity=2

      - name: Optional: Build Docker image
        if: github.event.inputs.build_image == 'true' || env.BUILD_IMAGE == 'true'
        run: |
          echo "Building Docker image because BUILD_IMAGE=true"
            docker build -t cesizen:${{ github.sha }} .